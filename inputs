#
#    Input file description and default values.  It contains all the 
#    variables that can be set as the input of the model.
#
#
#    Atomic unit conversion factors:
#
#        Time:        1 a.u. = 2.41888E-17 s
#        Energy:      1 a.u. = 27.2114 eV
#        Distance:    1 a.u. = 5.29177E-11 m
#        Momentum:    1 a.u. = 1.99285E-24 kg m/s
#        Magnetism:   1 a.u. = 2.35050E+5 T
#
#
#    Possible prime factored values for n < 2000 (for speed of FFT)
#
#    0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,18,20,21,24,25,27,28,30,32,35,
#    36,40,42,45,48,49,50,54,56,60,63,64,70,72,75,80,81,84,90,96,98,100,
#    105,108,112,120,125,126,128,135,140,144,147,150,160,162,168,175,
#    180,189,192,196,200,210,216,224,225,240,243,245,250,252,256,270,
#    280,288,294,300,315,320,324,336,343,350,360,375,378,384,392,400,
#    405,420,432,441,448,450,480,486,490,500,504,512,525,540,560,567,
#    576,588,600,625,630,640,648,672,675,686,700,720,729,735,750,756,
#    768,784,800,810,840,864,875,882,896,900,945,960,972,980,1000,1008,
#    1024,1029,1050,1080,1120,1125,1134,1152,1176,1200,1215,1225,1250,
#    1260,1280,1296,1323,1344,1350,1372,1400,1440,1458,1470,1500,1512,
#    1536,1568,1575,1600,1620,1680,1701,1715,1728,1750,1764,1792,1800,
#    1875,1890,1920,1944,1960,2000
#
#
#    Any real or integer values may be entered as expressions using one
#    the predefined constants:
#
#        pi         =    3.141592653589793238462643383279502884197
#        boltzk     =    1.380658d-23
#        h          =    6.6260755d-34
#        hbar       =    h/2.0d0/pi
#        masse      =    9.1093898d-31
#        nm         =    1.0d-9
#        chargee    =    1.60217733d-19
#        ev         =    chargee
#        aut        =    2.41888d-17
#        aue        =    27.2114*ev
#        aus        =    5.29177d-11
#        aup        =    1.99285d-24
#        aub        =    2.35050d5
#        c          =    2.99792458d8
#        mu0        =    4.0d0*pi*1.0d-7
#
#    For example, to define the mass of the wave function:
#
#        mass
#        0.067*masse
# 
#    or, to define the space size:
#
#        spacesize
#        100000.0*aus 100000.0*aus
#
#
#    Any lines which the interpreter does not understand are ignored.
#
#
#    A command consists of a keyword followed by defining values.
#
#
#    Any command not defined in the input file will first be defined
#    according to its default value.  Then, it will be dynamically
#    assigned according to other parameters.  For example: if n, p and
#    pmax are not defined in the input file, they initial get their
#    default values and then get redefined dynamically, dependant on
#    other defined variables.
#
#    The following were defined
#
#        space size
#        10000.0*aus 10000.0*aus
#
#        initialwavefn
#        gaussian
#
#        initialenergy
#        1.5d-3*aue
#
#    The following computations are performed in s_derive_parameters()
#
#        p             =   (/ sqrt(2.0d0*mass*initialenergy), 0.0d0 /)
#        pspread       =   pspread*sqrt(sum(p**2))
#        wavefnwidth   =   hbar/pspread
#        pmax          =   pmax + sqrt(-2.0d0*log(cutoff)/wavefnwidth**2
#                                      *hbar**2)
#        gridspacing   =   pi/pmax*hbar
#        n             =   int(spacesize/gridspacing)+1
#        n(1)          =   f_factorprime(n(1))
#        n(2)          =   f_factorprime(n(2))
#        gridspacing   =   spacesize/dble(n-1)
#        pmax          =   pi/gridspacing*hbar
#        pspacing      =   2.0d0*parameters%pmax / dble(n)
#
#    which dynamically define various required variables.  It is
#    suggested that the minimum number of definitions be placed in the
#    input file allowing the computer code to dynamically set all
#    other required variables.
# 
#
#    Allowed variables, a brief description and their default values.
# 

datadir               #  Directory where all output will be placed
<text>                #    maxlength=50
                      #    default:  data/

basename              #  Base name of all output to be produced
<text>                #    maxlength=50
                      #    default:  wavefn.

chkpntfile            #  Base name of the checkpoint file
<text>                #    maxlength=50
                      #    default:  cps_chkpnt.

initialwavefn         #  Shape of initial wavefunction
<text>                #    'gaussian' or 'fermi'
                      #    default:  gaussian

optimisation          #  Type of complex potential to use
<text>                #    'splitwavefn' or 'exponential' or 'gaussian'
                      #    or 'linear' or 'freespace' or 
                      #    or 'theoreticalfreespace'or 'none'
                      #    default:  none

potsmoothtype         #  How to smooth the potential
<text>                #    'poisson' or 'gaussblur' or 'none'
                      #    default:  none

comppotpos            #  Where to put the complex potential
<logical> <logical> <logical> <logical>
                      #    xmin edge, xmax edge, ymin edge, ymax edge
                      #    default:  .true. .true. .true. .true.

smooth                #  Number of gridpoints to smooth the potential
<integer> <integer>   #    x- and y- dimension
                      #    default:  32 32

extraboundary         #  Amount of extra boundary to add
<integer> <integer>   #    x- and y- dimension
                      #    default:  2 2

mass                  #  Mass of the wave function
<real>                #    mass
                      #    default:  6.67d-2*masse

fermienergy           #  Fermi energy of the initial wave function
<real>                #  fermi energy
                      #    default:  0.0

temperature           #  Temperature of the initial wave function
<real>                #  temperature
                      #    default:  0.01

initialenergy         #  Initial energy of the wave function
<real>                #    energy
                      #    default:  0.0

p                     #  Initial momentum of the wave function
<real> <real>         #    x- and y- components
                      #    default: 0.0 0.0

pspread               #  Initial spread of the wave function
<real> <real>         #  x- and y- components as a percentage of p
                      #    default:  0.05 0.05

pmax                  #  Maximum momentum supported by the grid
<real> <real>         #    x- and y- components
                      #    default:  0.0 0.0

accuracyfactor        #  Increased accuracy in each dimension
<real> <real>         #    x- and y- increase factor (multiples pmax)
                      #    default:  1.0 1.0

eigenfactor           #  Increase eigen energy in Chebyshev expansion
<real>                #    multiplicative factor
                      #    default:  1.25

position              #  Starting position of the wave function
<real> <real>         #    x- and y- coordinates
                      #    default:  0.0 0.0

wavefnwidth           #  Spread of the wave function
<real> <real>         #    x- and y- spread
                      #    default:  0.0 0.0

t                     #  Propagation time
<real>                #    time
                      #    default:  0.0

n                     #  Number of grid points
<integer> <integer>   #    x- and y- grid points
                      #    default:  0 0

distance              #  Propagation distance
<real>                #    distance
                      #    default:  1.0d4*aus

gridspacing           #  Distance between grid points
<real> <real>         #    x- and y- gridspacing
                      #    default:  0.0 0.0

maxgridspacing        #  Maximum distance between grid points
<real> <real>         #    x- and y- max gridspacing
                      #    default:  0.0 0.0

pspacing              #  Momentum spacing between momentum grid points
<real> <real>         #    x- and y- momentum spacing
                      #    default:  0.0 0.0

spacesize             #  Size of space
<real> <real>         #    x- and y- size
                      #    default:  2.0d4*aus 2.0d4*aus

timesteps             #  Number of timesteps to break propagation into
<integer>             #    number of time steps
                      #    default:  1
                      
chkpntfreq            #  Frequency to checkpoint (number of time steps)
<integer>             #    frequency in terms of time steps
                      #    default:  1

tstep                 #  Size of each timestep
<real>                #    time step size
                      #    default:  0.0

plotnumber            #  Number of wavefunction to save to disk
<integer>             #    number
                      #    default:  0

plotpointnum          #  Number of grid points to save to disk
<integer> <integer>   #    x- and y- points
                      #    default:  0 0

plotcomplex           #  Include complex potential when saving to disk
<logical>             #    save complex
                      #    default:  .true.

plotwfn               #  Save the wave function to disk
<logical>             #    save wave function
                      #    default:  .true.

plotwfnp              #  Save the momentum of the wave function to disk
<logical>             #    save momentum wave function
                      #    default:  .true.

plotpot               #  Save the potential to disk
<logical>             #    save potential
                      #    default:  .true.

potrange              #  Range of the potential
<real> <real>         #    min and max of potential
                      #    default:  0.0 0.0

tranrefl              #  Output transmission and reflection coefficients
<logical>             #    output coefficients
                      #    default:  .true.

potbound              #  Bounds of the space
<real> <real> <real> <real>
                      #    xmin, xmax, ymin, ymax
                      #    default:  0.0 0.0 0.0 0.0

speccutoff            #  Cutoff of the momentum spectrum
<real>                #    minimum momentum
                      #    default:  0.01

tspectrum             #  Compute and save the transmission spectrum
<logical>             #    transmission spectrum
                      #    default:  .true.

espectrum             #  Compute and save the energy spectrum
<logical>             #    energy spectrym
                      #    default:  .true.

pspectrum             #  Compute and save the momentum spectrum
<logical>             #    momentum spectrym
                      #    default:  .true.

conductance           #  Compute and save the conductance
<logical>             #    conductance
                      #    default:  .true.

primefactorn          #  Ensure n is a multiple of prime factors
<logical>             #    prime factors
                      #    default:  .true.

externale             #  External electric field across potential
<real>                #    magnitude of electric field
                      #    default:  0.0

externalb             #  External magnetic field
<real>                #    magnitude of magnetic field
                      #    default:  0.0

gauge                 #  Magnetic vector potential gauge
<text>                #    '(-y,0,0)' or '(-y,x,0)' or '(x-y,x-y,0)'
                      #    default:  (x-y,x-y,0)

omegal                #  The Lomar frequency for magnetic field
<real>                #    lomar frequency
                      #    default:  0.0

#
#    The following variables allow the definition of various shaped 
#    potentials
#

potfn                 #  Arbitrary function as the potential
<integer>             #    Potential object number
<real>                #    Minimum of function
<real>                #    Maxium of function
<function>            #    Fortran90 style function


circle                #  Defines a circle (annulus) for the potential
<integer>             #    Potential object number
<real> <real>         #    x- and y- coordinates of centre
<real>                #    Radius of circle
<real>                #    Width of circle boundary
<real>                #    Potential height of the circle

fillcircle            #  Filled circle for the potential
<integer>             #    Potential object number
<real> <real>         #    x- and y- coordinates of centre
<real>                #    Radius of circle
<real>                #    Potential height of the circle

ellipse               #  Ellipse (annulus) for the potential
<integer>             #    Potential object number
<real> <real>         #    x- and y- coordinates of centre
<real> <real>         #    Major and minor axes
<real>                #    Width of elipse boundary
<real>                #    Potential height of the ellipse

fillellipse           #  Filled ellipse for the potential
<integer>             #    Potential object number
<real> <real>         #    x- and y- coordinates of centre
<real> <real>         #    Major and minor axes
<real>                #    Potential height of the ellipse

line                  #  Line for the potential
<integer>             #    Potential object number
<real> <real>         #    x- and y- coordinates of line end
<real> <real>         #    x- and y- coordinates of line end
<real>                #    Width of line
<real>                #    Potential height of the line

ramp                  #  Ramp for the potential
<integer>             #    Potential object number
<real> <real>         #    x- and y- coordinates of line end
<real> <real>         #    x- and y- coordinates of line end
<real>                #    Width of line
<real>                #    Minimum height of ramp
<real>                #    Maximum height of ramp

polygon               #  Polygon (border)
<integer>             #    Potential object number
<real>                #    Width of polygon boundary
<real>                #    Potential height of polygon
<real> <real>         #    x- and y- coordinates  of first polygon point
...                   #    x- and y- coordinates  of polygon points
<real> <real>         #    x- and y- coordinates  of first polygon point

fillpolygon           #  Filled polygon
<integer>             #    Potential object number
<real>                #    Potential height of polygon
<real> <real>         #    x- and y- coordinates  of first polygon point
...                   #    x- and y- coordinates  of polygon points
<real> <real>         #    x- and y- coordinates  of first polygon point

end                   #  End of description file (required)
